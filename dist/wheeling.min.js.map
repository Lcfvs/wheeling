{"version":3,"file":"wheeling.min.js","sources":["../src/internals/promise.js","../src/apps.js","../src/fork.js","../src/internals/wrap.js","../src/io.js","../src/listen.js","../src/skip.js","../src/task.js","../src/hooks/awaitUntil.js","../src/hooks/preventDefault.js","../src/hooks/respondWith.js","../src/hooks/stopImmediatePropagation.js","../src/hooks/stopPropagation.js","../src/options/capture.js","../src/options/once.js","../src/options/passive.js"],"sourcesContent":["/**\r\n * @module wheeling/internals/promise\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/internals/promise.js\r\n * @internal\r\n */\r\n\r\nconst memo = []\r\n\r\nconst resolvers = new WeakMap()\r\n\r\nconst pick = (resolve, reject) =>\r\n  memo.unshift([resolve, reject])\r\n\r\nconst race = async (...promises) =>\r\n  Promise.race(promises)\r\n\r\nconst resolvable = () => {\r\n  const promise = new Promise(pick)\r\n\r\n  resolvers.set(promise, memo.shift())\r\n\r\n  return promise\r\n}\r\n\r\nconst resolver = (promise, key) => {\r\n  const value = resolvers.get(promise)?.[key]\r\n\r\n  resolvers.delete(promise)\r\n\r\n  return value\r\n}\r\n\r\nconst resolve = (promise, value) =>\r\n  resolver(promise, 0)?.(value)\r\n\r\nconst reject = (promise, error) =>\r\n  resolver(promise, 1)?.(error)\r\n\r\nconst pending = async (...promises) => {\r\n  const pending = {}\r\n\r\n  return (await race(...promises, pending)) === pending\r\n}\r\n\r\nexport {\r\n  pending,\r\n  race,\r\n  reject,\r\n  resolvable,\r\n  resolve,\r\n  resolver\r\n}\r\n","/**\r\n * @module wheeling/apps\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/apps.js\r\n */\r\n\r\nimport { reject, resolvable, resolve } from './internals/promise.js'\r\n\r\nconst apps = new WeakMap()\r\n\r\n/**\r\n * @async\r\n * @param {app} app\r\n * @param {(AsyncIterableIterator|IterableIterator)[]} iterables\r\n */\r\nexport const add = async (app, iterables) => {\r\n  validate(app)\r\n\r\n  const promises = []\r\n\r\n  for (const iterable of iterables) {\r\n    const promise = resolvable()\r\n\r\n    promises.push(promise)\r\n\r\n    queueMicrotask(async () => {\r\n      while (true) {\r\n        const current = iterable.next()\r\n\r\n        resolve(promise)\r\n\r\n        if ((await current).done) {\r\n          break\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  await Promise.all(promises)\r\n}\r\n\r\n/**\r\n * @returns {app}\r\n */\r\nexport const init = () => {\r\n  const app = resolvable()\r\n\r\n  apps.set(app, 1)\r\n\r\n  return app\r\n}\r\n\r\n/**\r\n * @param {app} app\r\n */\r\nexport const revoke = app => {\r\n  reject(app)\r\n  apps.delete(app)\r\n}\r\n\r\n/**\r\n * @param {app} app\r\n * @throws {ReferenceError}\r\n */\r\nexport const validate = app => {\r\n  if (!apps.has(app)) {\r\n    throw new ReferenceError('Unknown app')\r\n  }\r\n}\r\n","import { validate } from './apps.js'\r\nimport { pending, race } from './internals/promise.js'\r\n\r\nconst cast = async function* (iterable) {\r\n  yield* iterable\r\n}\r\n\r\nconst iterate = async function* (app, promises, keys, key, reader) {\r\n  const entries = promises.get(key)\r\n\r\n  try {\r\n    while (await pending(app)) {\r\n      if (!entries.length) {\r\n        const promise = race(app, reader.next())\r\n\r\n        for (const key of keys) {\r\n          promises.get(key).push(promise)\r\n        }\r\n      }\r\n\r\n      const { done, value } = await race(app, entries.shift())\r\n\r\n      if (done) {\r\n        break\r\n      }\r\n\r\n      yield value\r\n    }\r\n  } catch {} finally {\r\n    keys.delete(key)\r\n    promises.delete(key)\r\n  }\r\n}\r\n\r\n/**\r\n * @module wheeling/fork\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/fork.js\r\n */\r\n\r\n/**\r\n * @param {app} app\r\n * @param {AsyncIterable|Iterable} iterable\r\n * @param {?Number} length\r\n * @returns {AsyncIterableIterator[]}\r\n * @throws {ReferenceError}\r\n */\r\nexport default (app, iterable, length = 2) => {\r\n  validate(app)\r\n\r\n  const iterables = []\r\n  const keys = new Set(Array.from({ length }, Object))\r\n  const promises = new WeakMap()\r\n  const reader = cast(iterable)\r\n\r\n  for (const key of keys) {\r\n    promises.set(key, [])\r\n    iterables.push(iterate(app, promises, keys, key, reader))\r\n  }\r\n\r\n  return iterables\r\n}\r\n","/**\r\n * @module wheeling/internals/promise\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/internals/wrap.js\r\n * @internal\r\n */\r\n\r\nimport { validate } from '../apps.js'\r\n\r\nexport default generator =>\r\n  (app, ...params) => {\r\n    validate(app)\r\n\r\n    return generator(app, ...params)\r\n  }\r\n","/**\r\n * @module wheeling/io\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/io.js\r\n */\r\n\r\nimport { race, reject, resolvable, resolve } from './internals/promise.js'\r\nimport wrap from './internals/wrap.js'\r\n\r\nconst readable = async function* (app, promises) {\r\n  try {\r\n    while (promises.length) {\r\n      const [input, next] = promises\r\n\r\n      resolve(next)\r\n      yield race(app, input)\r\n    }\r\n  } catch {} finally {\r\n    if (promises.length) {\r\n      reject(promises.at(-1))\r\n    }\r\n  }\r\n}\r\n\r\nconst writable = async function* (app, promises) {\r\n  try {\r\n    while (promises.length) {\r\n      const [input, current] = promises\r\n\r\n      await race(app, current)\r\n      promises.splice(0, 2, resolvable(), resolvable())\r\n      resolve(input, yield)\r\n    }\r\n  } catch {}\r\n}\r\n\r\n/**\r\n * @param {app} app\r\n * @return {[AsyncIterableIterator,AsyncIterableIterator]}\r\n * @throws {ReferenceError}\r\n */\r\nexport default wrap(app => {\r\n  const promises = [resolvable(), resolvable()]\r\n  const input = writable(app, promises)\r\n  const output = readable(app, promises)\r\n\r\n  input.next()\r\n\r\n  return [input, output]\r\n})\r\n","/**\r\n * @module wheeling/listen\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/listen.js\r\n */\r\n\r\nimport { resolvable, resolver } from './internals/promise.js'\r\nimport wrap from './internals/wrap.js'\r\nimport io from './io.js'\r\n\r\nconst apps = new WeakMap()\r\n\r\nconst handleEvent = async function (event) {\r\n  const { forget, hooks, input, options } = this\r\n  const { once } = options\r\n  const target = event.currentTarget ?? event.target\r\n  const promise = resolvable()\r\n  let returned\r\n\r\n  for (const hook of hooks) {\r\n    returned = hook(event, promise) ?? returned\r\n  }\r\n\r\n  if (once) {\r\n    forget()\r\n  }\r\n\r\n  if (returned !== promise) {\r\n    await input.next({ event, target })\r\n\r\n    return\r\n  }\r\n\r\n  const [resolve, reject] = resolver(promise)\r\n\r\n  await input.next({ event, resolve, reject, target })\r\n}\r\n\r\n/**\r\n * @param {app} app\r\n * @param {EventTarget} target\r\n * @param {listener} listener\r\n * @throws {ReferenceError}\r\n */\r\nexport default wrap(async function* (app, target, listener) {\r\n  if (!apps.has(app)) {\r\n    apps.set(app, new WeakMap())\r\n  }\r\n\r\n  const listeners = apps.get(app)\r\n\r\n  if (!listeners.has(target)) {\r\n    listeners.set(target, new WeakMap())\r\n  }\r\n\r\n  const handlers = listeners.get(target)\r\n\r\n  if (handlers.has(listener)) {\r\n    throw new Error('Duplicate event listening')\r\n  }\r\n\r\n  const { hooks: [...hooks] = [], type, ...options } = listener\r\n  const ref = new WeakRef(target)\r\n  const [input, output] = io(app)\r\n  const forget = () => {\r\n    ref.deref()?.removeEventListener(type, handler, options)\r\n    handlers.delete(listener)\r\n    input.return()\r\n  }\r\n  const registry = new FinalizationRegistry(forget)\r\n  const handler = { forget, input, handleEvent, hooks, options }\r\n\r\n  registry.register(target, null)\r\n  handlers.set(listener, handler)\r\n  target.addEventListener(type, handler, options)\r\n\r\n  try {\r\n    yield * output\r\n  } finally {\r\n    forget()\r\n  }\r\n})\r\n","export default new Error('skip')\r\n","/**\r\n * @module wheeling/task\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/task.js\r\n */\r\n\r\nimport fork from './fork.js'\r\nimport wrap from './internals/wrap.js'\r\nimport skip from './skip.js'\r\n\r\n/**\r\n * @param {app} app\r\n * @param {AsyncIterable|Iterable} iterable\r\n * @param {function(*):*} task\r\n * @throws {ReferenceError}\r\n */\r\nexport default wrap(async function* (app, iterable, task) {\r\n  const [iterator] = fork(app, iterable, 1)\r\n\r\n  for await (const value of iterator) {\r\n    try {\r\n      yield task(value) ?? value\r\n    } catch (error) {\r\n      if (error !== skip) {\r\n        throw error\r\n      }\r\n    }\r\n  }\r\n})\r\n","/**\r\n * @module wheeling/hooks/awaitUntil\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/hooks/awaitUntil.js\r\n */\r\n\r\n/**\r\n * @type {hook}\r\n * @return {Promise}\r\n */\r\nexport default (event, promise) => {\r\n  event.waitUntil(promise)\r\n\r\n  return promise\r\n}\r\n","/**\r\n * @module wheeling/hooks/preventDefault\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/hooks/preventDefault.js\r\n **/\r\n\r\n/**\r\n * @type {hook}\r\n * @return {void}\r\n */\r\nexport default event => {\r\n  event.preventDefault()\r\n}\r\n","/**\r\n * @module wheeling/hooks/respondWith\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/hooks/respondWith.js\r\n */\r\n\r\n/**\r\n * @type {hook}\r\n * @return {Promise}\r\n */\r\nexport default (event, promise) => {\r\n  event.respondWith(promise)\r\n\r\n  return promise\r\n}\r\n","/**\r\n * @module wheeling/hooks/stopImmediatePropagation\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/hooks/stopImmediatePropagation.js\r\n */\r\n\r\n/**\r\n * @type {hook}\r\n * @return {void}\r\n */\r\nexport default event => {\r\n  event.stopImmediatePropagation()\r\n}\r\n","/**\r\n * @module wheeling/hooks/stopPropagation\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/hooks/stopPropagation.js\r\n */\r\n\r\n/**\r\n * @type {hook}\r\n * @return {void}\r\n */\r\nexport default event => {\r\n  event.stopPropagation()\r\n}\r\n","/**\r\n * @module wheeling/options/capture\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/options/capture.js\r\n */\r\n\r\nexport default true\r\n","/**\r\n * @module wheeling/options/once\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/options/once.js\r\n */\r\n\r\nexport default true\r\n","/**\r\n * @module wheeling/options/passive\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling/blob/master/src/options/passive.js\r\n */\r\n\r\nexport default true\r\n"],"names":["memo","resolvers","WeakMap","pick","resolve","reject","unshift","race","async","promises","Promise","resolvable","promise","set","shift","resolver","key","value","get","delete","error","pending","apps","add","app","iterables","validate","iterable","push","queueMicrotask","current","next","done","all","init","revoke","has","ReferenceError","iterate","keys","reader","entries","length","Set","Array","from","Object","cast","generator","params","wrap","input","splice","writable","output","at","readable","handleEvent","event","forget","hooks","options","this","once","target","currentTarget","returned","hook","listener","listeners","handlers","Error","type","ref","WeakRef","io","deref","removeEventListener","handler","return","registry","FinalizationRegistry","register","addEventListener","task","iterator","fork","skip","waitUntil","preventDefault","respondWith","stopImmediatePropagation","stopPropagation"],"mappings":"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"}