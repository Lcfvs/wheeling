{"version":3,"file":"wheeling.min.js","sources":["../src/internals/promise.js","../src/internals/core.js","../src/hooks.js","../src/options.js","../src/wheeling.js"],"sourcesContent":["/**\r\n * @module wheeling\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling\r\n * @preserve\r\n */\r\n\r\nconst memo = []\r\n\r\nconst resolvers = new WeakMap()\r\n\r\nconst pick = (resolve, reject) =>\r\n  memo.unshift([resolve, reject])\r\n\r\nconst race = async (...promises) =>\r\n  Promise.race(promises)\r\n\r\nconst resolvable = () => {\r\n  const promise = new Promise(pick)\r\n\r\n  resolvers.set(promise, memo.shift())\r\n\r\n  return promise\r\n}\r\n\r\nconst resolver = (promise, key) => {\r\n  const value = resolvers.get(promise)?.[key]\r\n\r\n  resolvers.delete(promise)\r\n\r\n  return value\r\n}\r\n\r\nconst resolve = (promise, value) =>\r\n  resolver(promise, 0)?.(value)\r\n\r\nconst reject = (promise, error) =>\r\n  resolver(promise, 1)?.(error)\r\n\r\nconst pending = async promise => {\r\n  const pending = {}\r\n\r\n  return (await race(promise, pending)) === pending\r\n}\r\n\r\nexport {\r\n  pending,\r\n  race,\r\n  reject,\r\n  resolvable,\r\n  resolve,\r\n  resolver\r\n}\r\n","/**\r\n * @module wheeling\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling\r\n * @preserve\r\n */\r\n\r\nimport { pending, race, reject, resolvable, resolve, resolver } from './promise.js'\r\n\r\nconst cast = async function* (iterable) {\r\n  yield* iterable\r\n}\r\n\r\nconst handleEvent = async function (event) {\r\n  const { forget, hooks, input, options } = this\r\n  const { once } = options\r\n  const promise = resolvable()\r\n  let returned\r\n\r\n  for (const hook of hooks) {\r\n    returned = hook(event, promise) ?? returned\r\n  }\r\n\r\n  if (once) {\r\n    forget()\r\n  }\r\n\r\n  if (returned !== promise) {\r\n    await input.next({ event })\r\n\r\n    return\r\n  }\r\n\r\n  const [resolve, reject] = resolver(promise)\r\n\r\n  await input.next({ event, resolve, reject })\r\n}\r\n\r\nconst iterate = async function* (app, promises, keys, key, reader) {\r\n  const entries = promises.get(key)\r\n\r\n  try {\r\n    while (await pending(app)) {\r\n      if (!entries.length) {\r\n        const promise = race(app, reader.next())\r\n\r\n        for (const key of keys) {\r\n          promises.get(key).push(promise)\r\n        }\r\n      }\r\n\r\n      const { done, value } = await race(app, entries.shift())\r\n\r\n      if (done) {\r\n        break\r\n      }\r\n\r\n      yield value\r\n    }\r\n  } catch {} finally {\r\n    keys.delete(key)\r\n    promises.delete(key)\r\n  }\r\n}\r\n\r\nconst readable = async function* (app, promises) {\r\n  try {\r\n    while (promises.length) {\r\n      const [input, next] = promises\r\n\r\n      resolve(next)\r\n      yield race(app, input)\r\n    }\r\n  } catch {} finally {\r\n    if (promises.length) {\r\n      reject(promises.at(-1))\r\n    }\r\n  }\r\n}\r\n\r\nconst writable = async function* (app, promises) {\r\n  try {\r\n    while (promises.length) {\r\n      const [input, current] = promises\r\n\r\n      await race(app, current)\r\n      promises.splice(0, 2, resolvable(), resolvable())\r\n      resolve(input, yield)\r\n    }\r\n  } catch {}\r\n}\r\n\r\nexport {\r\n  cast,\r\n  handleEvent,\r\n  iterate,\r\n  readable,\r\n  writable\r\n}\r\n","/**\r\n * @module wheeling/hooks.js\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling\r\n */\r\n\r\nconst awaitUntil = (event, promise) => {\r\n  event.waitUntil(promise)\r\n\r\n  return promise\r\n}\r\n\r\nconst preventDefault = event =>\r\n  event.preventDefault()\r\n\r\nconst respondWith = (event, promise) => {\r\n  event.respondWith(promise)\r\n\r\n  return promise\r\n}\r\n\r\nconst stopImmediatePropagation = event =>\r\n  event.stopImmediatePropagation()\r\n\r\nconst stopPropagation = event =>\r\n  event.stopPropagation()\r\n\r\nexport {\r\n  awaitUntil,\r\n  preventDefault,\r\n  respondWith,\r\n  stopImmediatePropagation,\r\n  stopPropagation\r\n}\r\n","/**\r\n * @module wheeling/options.js\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling\r\n */\r\n\r\nconst capture = true\r\n\r\nconst once = true\r\n\r\nconst passive = true\r\n\r\nexport {\r\n  capture,\r\n  once,\r\n  passive\r\n}\r\n","/**\r\n * @module wheeling/wheeling.js\r\n * @copyright Lcf.vs 2022\r\n * @licence MIT\r\n * @link https://github.com/Lcfvs/wheeling\r\n */\r\n\r\nimport { cast, handleEvent, iterate, readable, writable } from './internals/core.js'\r\nimport { reject, resolvable, resolve } from './internals/promise.js'\r\n\r\nconst apps = new WeakMap()\r\n\r\nconst add = async (app, [...iterables]) => {\r\n  const promises = []\r\n\r\n  for (const iterable of iterables) {\r\n    const promise = resolvable()\r\n\r\n    promises.push(promise)\r\n\r\n    queueMicrotask(async () => {\r\n      for await (const value of iterable) {}\r\n    })\r\n\r\n    queueMicrotask(() => resolve(promise))\r\n  }\r\n\r\n  await Promise.all(promises)\r\n}\r\n\r\nconst fork = (app, iterable, length = 2) => {\r\n  const iterables = []\r\n  const keys = new Set(Array.from({ length }, Object))\r\n  const promises = new WeakMap()\r\n  const reader = cast(iterable)\r\n\r\n  for (const key of keys) {\r\n    promises.set(key, [])\r\n    iterables.push(iterate(app, promises, keys, key, reader))\r\n  }\r\n\r\n  return iterables\r\n}\r\n\r\nconst init = () => {\r\n  const app = resolvable()\r\n\r\n  apps.set(app, new WeakMap())\r\n\r\n  return app\r\n}\r\n\r\nconst io = app => {\r\n  const promises = [resolvable(), resolvable()]\r\n  const input = writable(app, promises)\r\n  const output = readable(app, promises)\r\n\r\n  input.next()\r\n\r\n  return [input, output]\r\n}\r\n\r\nconst listen = async function* (app, target, listener) {\r\n  const listeners = apps.get(app)\r\n\r\n  if (!listeners.has(target)) {\r\n    listeners.set(target, new WeakMap())\r\n  }\r\n\r\n  const handlers = listeners.get(target)\r\n\r\n  if (handlers.has(listener)) {\r\n    throw new Error('Duplicate event listening')\r\n  }\r\n\r\n  const { hooks: [...hooks] = [], type, ...options } = listener\r\n  const ref = new WeakRef(target)\r\n  const [input, output] = io(app)\r\n  const forget = () => {\r\n    ref.deref()?.removeEventListener(type, handler, options)\r\n    handlers.delete(listener)\r\n    input.return()\r\n  }\r\n  const registry = new FinalizationRegistry(forget)\r\n  const handler = { forget, input, handleEvent, hooks, options }\r\n\r\n  registry.register(target, null)\r\n  handlers.set(listener, handler)\r\n  target.addEventListener(type, handler, options)\r\n\r\n  try {\r\n    yield * output\r\n  } finally {\r\n    forget()\r\n  }\r\n}\r\n\r\nconst task = async function* (app, iterable, task) {\r\n  const [iterator] = fork(app, iterable, 1)\r\n\r\n  for await (const value of iterator) {\r\n    yield task(value) ?? value\r\n  }\r\n}\r\n\r\nconst revoke = app => {\r\n  reject(app)\r\n  apps.delete(app)\r\n}\r\n\r\nexport * from './hooks.js'\r\nexport * from './options.js'\r\n\r\nexport {\r\n  add,\r\n  fork,\r\n  init,\r\n  io,\r\n  listen,\r\n  revoke,\r\n  task\r\n}\r\n"],"names":["memo","resolvers","WeakMap","pick","resolve","reject","unshift","race","async","promises","Promise","resolvable","promise","set","shift","resolver","key","value","get","delete","error","pending","handleEvent","event","forget","hooks","input","options","this","once","returned","hook","next","iterate","app","keys","reader","entries","length","push","done","awaitUntil","waitUntil","preventDefault","respondWith","stopImmediatePropagation","stopPropagation","capture","passive","apps","add","iterables","iterable","queueMicrotask","all","fork","Set","Array","from","Object","cast","init","io","current","splice","writable","output","at","readable","listen","target","listener","listeners","has","handlers","Error","type","ref","WeakRef","deref","removeEventListener","handler","return","registry","FinalizationRegistry","register","addEventListener","task","iterator","revoke"],"mappings":"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"}